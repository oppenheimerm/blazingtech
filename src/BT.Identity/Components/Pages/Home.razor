@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject IJSRuntime JSRuntime

@implements IAsyncDisposable

@page "/"
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

@code{
    private IJSObjectReference? module;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        //  We don't need to load our javascript every time the
        //  the page loads
        if (firstRender)
        {
            module = await JSRuntime.InvokeAsync<IJSObjectReference>("import", "./Components/Layout/ThemeToggler.razor.js");

            if ((await localStorage.ContainKeyAsync("theme")))
            {
                string? theme = await localStorage.GetItemAsStringAsync("theme");
                if (theme is not null)
                {
                    if (theme == "dark")
                    {
                        await module!.InvokeVoidAsync("setTheme", 1);
                    }
                }
            }

            StateHasChanged();
        }
    }

    async ValueTask IAsyncDisposable.DisposeAsync()
    {
        if (module is not null)
        {
            await module.DisposeAsync();
        }
    }
}




<div id="page" class="content-page text-gray-500 bg-gray-100 p-4 sm:ml-64 dark:bg-zinc-800 dark:text-white h-screen">

    <h1>Hello, world!</h1>

    Welcome to your new app.

</div>
